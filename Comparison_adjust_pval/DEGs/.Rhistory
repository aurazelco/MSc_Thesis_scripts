geom_tile() +
scale_fill_manual(values = c("Yes"="#F8766D",
"No"="#00BFC4"),
na.value = "#00BFC4",
guide = guide_legend(reverse = TRUE)) +
facet_grid(sex ~ ct , scales = "free") +
labs(x="Groups", y="Genes", fill="Genes found") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.spacing.x=unit(0, "lines"),
plot.title = element_text(size=12, face="bold", colour = "black"),
axis.line = element_line(colour = "black"),
axis.title.y = element_text(size=12, face="bold", colour = "black"),
axis.title.x = element_text(size=12, face="bold", colour = "black"),
axis.text.x = element_text(size=8, colour = "black", vjust = 0.7, hjust=0.5, angle = 90),
legend.position = "bottom",
legend.title = element_text(size=12, face="bold", colour = "black"))
)
dev.off()
x_escapees <- read.table("/Users/aurazelco/Desktop/Lund_MSc/Thesis/data/Comparison_adjust_pval/escape_Xchr.txt", sep="\t", skip = 2)
plot_path <- paste0(main_comparison, "Hmp_Presence_Ind_DEGs/")
dir.create(plot_path, recursive = T, showWarnings = F)
pdf(paste0(plot_path, "X_escaping_genes.pdf"), width = 15)
print(
ggplot(complete(all_genes[which(all_genes$gene_id %in% x_escapees$V2), ], gene_id, condition,sex,ct),
aes(factor(condition, groups_order[which(groups_order %in% unique(condition))]), gene_id, fill=presence)) +
geom_tile() +
scale_fill_manual(values = c("Yes"="#F8766D",
"No"="#00BFC4"),
na.value = "#00BFC4",
guide = guide_legend(reverse = TRUE)) +
facet_grid(sex ~ ct , scales = "free") +
labs(x="Groups", y="Genes", fill="Genes found") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.spacing.x=unit(0, "lines"),
plot.title = element_text(size=12, face="bold", colour = "black"),
axis.line = element_line(colour = "black"),
axis.title.y = element_text(size=12, face="bold", colour = "black"),
axis.title.x = element_text(size=12, face="bold", colour = "black"),
axis.text.x = element_text(size=8, colour = "black", vjust = 0.7, hjust=0.5, angle = 90),
legend.position = "bottom",
legend.title = element_text(size=12, face="bold", colour = "black"))
)
dev.off()
f_count_F <- as.data.frame(table(all_genes[which(all_genes$presence=="Yes" & all_genes$sex=="F"), "gene_id"]))
f_count_F$sex <- rep("F", nrow(f_count_F))
m_count_F <- as.data.frame(table(all_genes[which((all_genes$gene_id %in% unique(f_count_F$Var1)) & all_genes$sex=="M" & all_genes$presence=="Yes"), "gene_id"]))
m_count_F$sex <- rep("M", nrow(m_count_F))
sex_count_F <- rbind(f_count_F, m_count_F)
colnames(sex_count_F) <- c("gene_id", "count", "sex")
sex_count_F <- complete(sex_count_F, gene_id, sex)
sex_count_F[which(is.na(sex_count_F$count)), "count"] <- 0
abs_diff_F <- data.frame("gene_id"=unique(sex_count_F$gene_id))
abs_diff_F$sex_diff <- rep(NA, nrow(abs_diff_F))
for (i in abs_diff_F$gene_id) {
abs_diff_F[which(abs_diff_F$gene_id==i), "sex_diff"] <- sex_count_F[which(sex_count_F$sex=="F" & sex_count_F$gene_id==i), "count"] - sex_count_F[which(sex_count_F$sex=="M" & sex_count_F$gene_id==i), "count"]
}
abs_diff_F <- abs_diff_F[which(abs_diff_F$sex_diff > 0 ),]
abs_diff_F <- abs_diff_F[order(abs_diff_F$sex_diff, decreasing = T), ]
abs_diff_F$gene_id <- factor(abs_diff_F$gene_id, unique(abs_diff_F$gene_id))
m_count_M <- as.data.frame(table(all_genes[which(all_genes$presence=="Yes" & all_genes$sex=="M"), "gene_id"]))
m_count_M$sex <- rep("M", nrow(m_count_M))
f_count_M <- as.data.frame(table(all_genes[which((all_genes$gene_id %in% unique(m_count_M$Var1)) & all_genes$sex=="F" & all_genes$presence=="Yes"), "gene_id"]))
f_count_M$sex <- rep("F", nrow(f_count_M))
sex_count_M <- rbind(f_count_M, m_count_M)
colnames(sex_count_M) <- c("gene_id", "count", "sex")
sex_count_M <- complete(sex_count_M, gene_id, sex)
sex_count_M[which(is.na(sex_count_M$count)), "count"] <- 0
abs_diff_M <- data.frame("gene_id"=unique(sex_count_M$gene_id))
abs_diff_M$sex_diff <- rep(NA, nrow(abs_diff_M))
for (i in abs_diff_M$gene_id) {
abs_diff_M[which(abs_diff_M$gene_id==i), "sex_diff"] <- sex_count_M[which(sex_count_M$sex=="M" & sex_count_M$gene_id==i), "count"] - sex_count_M[which(sex_count_M$sex=="F" & sex_count_M$gene_id==i), "count"]
}
abs_diff_M <- abs_diff_M[which(abs_diff_M$sex_diff > 0 ),]
abs_diff_M <- abs_diff_M[order(abs_diff_M$sex_diff, decreasing = T), ]
abs_diff_M$gene_id <- factor(abs_diff_M$gene_id, unique(abs_diff_M$gene_id))
top10F <- as.character(abs_diff_F[1:10, "gene_id"])
top10M <- as.character(abs_diff_M[1:10, "gene_id"])
common_genes <- intersect(top10F, top10M)
`%!in%` <- Negate(`%in%`)
if (length(common_genes) > 0 ) {
top10F_u <- top10F[which(top10F %!in% common_genes)]
top10M_u <- top10M[which(top10M %!in% common_genes)]
while (length(top10F_u) < 10 & length(top10M_u) < 10) {
print(length(top10F_u))
print(length(top10M_u))
for (i  in common_genes) {
if (abs_diff_F[which(abs_diff_F$gene_id==i), "sex_diff"] > abs_diff_M[which(abs_diff_M$gene_id==i), "sex_diff"]) {
top10F_u <- c(top10F_u, i)
} else {
top10M_u <- c(top10M_u, i)
}
}
}
} else {
top10F_u <- top10F
top10M_u <- top10M
}
if (length(top10F_u) < 10) {
missing_genes <- as.character(abs_diff_F$gene_id[11:(11+10 - length(top10F_u) - 1)])
top10F_u <- c(top10F_u, missing_genes)
}
if (length(top10M_u) < 10) {
missing_genes <- as.character(abs_diff_M$gene_id[11:(11+10 - length(top10M_u) - 1)])
top10M_u <- c(top10M_u, missing_genes)
}
most_diff_genes <- c(top10F_u, top10M_u)
most_diff_genes <- complete(all_genes[which(all_genes$gene_id %in% most_diff_genes), ], gene_id, condition,sex,ct)
most_diff_genes$gene_id <- factor(most_diff_genes$gene_id, rev(c(top10F_u, top10M_u)))
plot_path <- paste0(main_comparison, "Hmp_Presence_Ind_DEGs/")
dir.create(plot_path, recursive = T, showWarnings = F)
pdf(paste0(plot_path, "top_20_most_diff_genes.pdf"), width = 15, height = 15)
print(
ggplot(most_diff_genes,
aes(factor(condition, groups_order[which(groups_order %in% unique(condition))]), gene_id, fill=presence)) +
geom_tile() +
scale_fill_manual(values = c("Yes"="#F8766D",
"No"="#00BFC4"),
na.value = "#00BFC4",
guide = guide_legend(reverse = TRUE)) +
facet_grid(sex ~  ct, scales = "free") +
labs(x="Groups", y="Genes", fill="Genes found") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.spacing.x=unit(0, "lines"),
plot.title = element_text(size=12, face="bold", colour = "black"),
axis.line = element_line(colour = "black"),
axis.title.y = element_text(size=12, face="bold", colour = "black"),
axis.title.x = element_text(size=12, face="bold", colour = "black"),
axis.text.x = element_text(size=8, colour = "black", vjust = 0.7, hjust=0.5, angle = 90),
legend.position = "bottom",
legend.title = element_text(size=12, face="bold", colour = "black"))
)
dev.off()
source("/Users/aurazelco/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_DEGs_func.R")
# sets the directories where to find the DEG csv files
main_DISCO <- "/Users/aurazelco/Desktop/Lund_MSc/Thesis/data/DISCOv1.0/DEGs_proj_adjust_pval/"
main_UCSC <- "/Users/aurazelco/Desktop/Lund_MSc/Thesis/data/UCSC/DEGs_adjust_pval/"
# set the main directory where to save the generated plots - sub-directories are created (if they do not already exist) within the plotting functions
main_comparison <- "/Users/aurazelco/Desktop/Lund_MSc/Thesis/data/Comparison_adjust_pval/"
# Vectors to save the different sub-groups of DISCO and UCSC
sub_disco <- list.dirs(main_DISCO, full.names = F, recursive = F)[-1]
# the first folder "exta_files" is excluded
sub_UCSC <- list.dirs(main_UCSC, full.names = F, recursive = F)[-1]
# Import all the CSVs from the different ages/conditions - slightly different file tree structure requires a different approach for UCSC
disco <- ImportDatasets(main_DISCO, sub_disco, UCSC_flag = "no", individual_projs = T)
names(disco[[1]]) <- str_replace_all(names(disco[[1]]), "Normal", "Healthy")
UCSC <- ImportDatasets(main_UCSC, sub_UCSC, UCSC_flag = "yes", individual_projs = F)
unified_annotation <- c("CXCL14 IN" = "Interneurons",
"EC" = "Endothelial cells",
"fibrous astrocyte"  = "Astrocytes",
"L2_3 EN" = "Excitatory neurons",
"L4 EN" = "Excitatory neurons",
"L5 EN" = "Excitatory neurons",
"L5_6 EN" = "Excitatory neurons",
"L5b EN" = "Excitatory neurons",
"L6 EN" = "Excitatory neurons",
"microglia" = "Microglia",
"Oligodendrocyte" =  "Oligodendrocytes",
"OPC" = "OPCs",
"PLCH1 L4_5 EN" = "Excitatory neurons",
"protoplasmic astrocyte" = "Astrocytes",
"PVALB IN"  = "Interneurons",
"pyramidal neuron"  = "Excitatory neurons",
"SST IN" = "Interneurons",
"SV2C IN"  = "Interneurons",
"TSHZ2 L4_5 EN" = "Excitatory neurons",
"VIP IN" = "Interneurons",
"Mesenchymal" = "Mesenchymal",
"Neuroepithelial" =     "Neuroepithelial",
"Neuronal" = "Neurons",
"Other"    = "Other",
"Radial Glial"     = "Radial Glia",
"Astrocytes" = "Astrocytes",
"Excitatory neurons"  = "Excitatory neurons",
"Interneurons"   = "Interneurons",
"Microglia"  = "Microglia",
"Oligodendrocytes" = "Oligodendrocytes",
"OPCs" = "OPCs",
"Unknown" = "Unknown",
"Vascular cells" = "Vascular cells",
"Dorsal progenitors"  = "Dorsal progenitors" ,
"Ventral progenitors" = "Ventral progenitors")
names(unified_annotation) <- tolower(names(unified_annotation))
# defines the order in which to organize the presence heatmaps, so the groups are in developmental order, with the last groups as diseases
groups_order <- c(
"Velmeshev_2022_2nd_trimester",
"Velmeshev_2022_3rd_trimester",
"Velmeshev_2022_0_1_years",
"Velmeshev_2022_1_2_years",
"Velmeshev_2022_2_4_years",
"Velmeshev_2022_10_20_years",
"Velmeshev_2022_Adult",
"Healthy_GSE157827",
"Healthy_GSE174367",
"Healthy_PRJNA544731",
"Alzheimer's disease_GSE157827",
"Alzheimer's disease_GSE174367",
"Multiple Sclerosis_PRJNA544731"
)
# Generates a df with all DEGs
sexes <- CreateSexDf(c(UCSC[[1]], disco[[1]]), unified_annotation)
rra <- load("/Users/aurazelco/Desktop/Lund_MSc/Thesis/data/Comparison_adjust_pval/Pattama_RRA.RData")
Healthy_disco <- NormDf(disco[[1]][c("Healthy_GSE157827", "Healthy_GSE174367", "Healthy_PRJNA544731")], unified_annotation)
View(Healthy_disco)
rm(rra)
View(Healthy_disco)
View(Healthy_disco[["M"]])
rra <- list("F"=RRA_F, "M"=RRA_M)
common_genes_rra <- vector()
comp_names <- vector()
for (sex in c("F", "M")) {
for (proj in unique(Healthy_disco[[sex]]$proj_id)) {
for (ct in unique(Healthy_disco[[sex]][which(Healthy_disco[[sex]]$proj_id==proj), "common_annot"])) {
comp_names <- c(comp_names, paste(sex, proj, ct, sep = "/"))
common_genes_rra <- c(common_genes_rra, length(intersect(Healthy_disco[[sex]][which(Healthy_disco[[sex]]$proj_id==proj & Healthy_disco[[sex]]$common_annot==ct), "Gene"],
rra[[sex]][[region_of_interest]][[, "Gene"]])))
}
}
}
region_of_interest <- "FC"
common_genes_rra <- vector()
comp_names <- vector()
for (sex in c("F", "M")) {
for (proj in unique(Healthy_disco[[sex]]$proj_id)) {
for (ct in unique(Healthy_disco[[sex]][which(Healthy_disco[[sex]]$proj_id==proj), "common_annot"])) {
comp_names <- c(comp_names, paste(sex, proj, ct, sep = "/"))
common_genes_rra <- c(common_genes_rra, length(intersect(Healthy_disco[[sex]][which(Healthy_disco[[sex]]$proj_id==proj & Healthy_disco[[sex]]$common_annot==ct), "Gene"],
rra[[sex]][[region_of_interest]][[, "Gene"]])))
}
}
}
rra[["F"]][["FC"]]$Gene
common_genes_rra <- vector()
comp_names <- vector()
for (sex in c("F", "M")) {
for (proj in unique(Healthy_disco[[sex]]$proj_id)) {
for (ct in unique(Healthy_disco[[sex]][which(Healthy_disco[[sex]]$proj_id==proj), "common_annot"])) {
comp_names <- c(comp_names, paste(sex, proj, ct, sep = "/"))
common_genes_rra <- c(common_genes_rra, length(intersect(Healthy_disco[[sex]][which(Healthy_disco[[sex]]$proj_id==proj & Healthy_disco[[sex]]$common_annot==ct), "Gene"],
rra[[sex]][[region_of_interest]][, "Gene"])))
}
}
}
rra_common <- data.frame(comp_names, common_genes_rra)
rra_common <- separate(rra_common, comp_names, into = c("sex", "proj", "ct"), sep = "/")
View(rra_common)
num_genes_rra <- vector()
comp_names <- vector()
for (sex in c("F", "M")) {
for (proj in unique(Healthy_disco[[sex]]$proj_id)) {
for (ct in unique(Healthy_disco[[sex]][which(Healthy_disco[[sex]]$proj_id==proj), "common_annot"])) {
comp_names <- c(comp_names, paste(sex, proj, ct, sep = "/"))
num_genes_rra <- c(num_genes_rra, length(intersect(Healthy_disco[[sex]][which(Healthy_disco[[sex]]$proj_id==proj & Healthy_disco[[sex]]$common_annot==ct), "Gene"],
rra[[sex]][[region_of_interest]][, "Gene"])))
}
}
}
rra_common <- data.frame(comp_names, num_genes_rra)
rra_common <- separate(rra_common, comp_names, into = c("sex", "proj", "ct"), sep = "/")
ggplot(rra_common, aes(proj, num_genes_rra, fill=sex)) +
geom_bar(stat = "identity", position = "dodge", color-"black") +
facet_wrap(~ ct)
ggplot(rra_common, aes(proj, num_genes_rra, fill=sex)) +
geom_bar(stat = "identity", position = "dodge", color="black") +
facet_wrap(~ ct)
ggplot(rra_common, aes(proj, num_genes_rra, fill=sex)) +
geom_bar(stat = "identity", position = "dodge", color="black") +
facet_wrap(~ ct, scales = "free") +
scale_y_continuous(breaks=seq(min(num_genes_rra), max(num_genes_rra), by=1)) +
labs(x = "Number of conditions sharing genes", y="Log10 counts of shared genes", fill="Chromosomes") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.spacing.x=unit(0, "lines"),
plot.title = element_text(size=12, face="bold", colour = "black"),
axis.line = element_line(colour = "black"),
axis.title.y = element_text(size=12, face="bold", colour = "black"),
axis.text.y = element_text(size=8, colour = "black", vjust = 0.7, hjust=0.5),
axis.title.x = element_text(size=12, face="bold", colour = "black"),
axis.text.x = element_text(size=8, colour = "black", vjust = 0.7, hjust=0.5),
legend.position = "bottom",
legend.title = element_text(size=12, face="bold", colour = "black"))
healthy <- NormDf(c(UCSC[[1]]["Velmeshev_2022_Adult"], disco[[1]][c("Healthy_GSE157827", "Healthy_GSE174367", "Healthy_PRJNA544731")]), unified_annotation)
num_genes_rra <- vector()
comp_names <- vector()
for (sex in c("F", "M")) {
for (proj in unique(healthy[[sex]]$proj_id)) {
for (ct in unique(healthy[[sex]][which(healthy[[sex]]$proj_id==proj), "common_annot"])) {
comp_names <- c(comp_names, paste(sex, proj, ct, sep = "/"))
num_genes_rra <- c(num_genes_rra, length(intersect(healthy[[sex]][which(healthy[[sex]]$proj_id==proj & healthy[[sex]]$common_annot==ct), "Gene"],
rra[[sex]][[region_of_interest]][, "Gene"])))
}
}
}
rra_common <- data.frame(comp_names, num_genes_rra)
rra_common <- separate(rra_common, comp_names, into = c("sex", "proj", "ct"), sep = "/")
ggplot(rra_common, aes(proj, num_genes_rra, fill=sex)) +
geom_bar(stat = "identity", position = "dodge", color="black") +
facet_wrap(~ ct, scales = "free") +
scale_y_continuous(breaks=seq(min(num_genes_rra), max(num_genes_rra), by=1)) +
labs(x = "Healthy adult datasets", y="Number of shared genes with Pattama", fill="Sex") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.spacing.x=unit(0, "lines"),
plot.title = element_text(size=12, face="bold", colour = "black"),
axis.line = element_line(colour = "black"),
axis.title.y = element_text(size=12, face="bold", colour = "black"),
axis.text.y = element_text(size=8, colour = "black", vjust = 0.7, hjust=0.5),
axis.title.x = element_text(size=12, face="bold", colour = "black"),
axis.text.x = element_text(size=8, colour = "black", vjust = 0.7, hjust=0.5),
legend.position = "bottom",
legend.title = element_text(size=12, face="bold", colour = "black"))
ggplot(rra_common, aes(proj, num_genes_rra, fill=sex)) +
geom_bar(stat = "identity", position = "dodge", color="black") +
facet_grid(sex ~ ct, scales = "free") +
scale_y_continuous(breaks=seq(min(num_genes_rra), max(num_genes_rra), by=1)) +
labs(x = "Healthy adult datasets", y="Number of shared DEGs with RRA", fill="Sex") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.spacing.x=unit(0, "lines"),
plot.title = element_text(size=12, face="bold", colour = "black"),
axis.line = element_line(colour = "black"),
axis.title.y = element_text(size=12, face="bold", colour = "black"),
axis.text.y = element_text(size=8, colour = "black", vjust = 0.7, hjust=0.5),
axis.title.x = element_text(size=12, face="bold", colour = "black"),
axis.text.x = element_text(size=8, colour = "black", vjust = 0.7, hjust=0.5),
legend.position = "bottom",
legend.title = element_text(size=12, face="bold", colour = "black"))
ggplot(rra_common, aes(proj, num_genes_rra, fill=proj)) +
geom_bar(stat = "identity", position = "dodge", color="black") +
facet_grid(ct ~ sex, scales = "free") +
scale_y_continuous(breaks=seq(min(num_genes_rra), max(num_genes_rra), by=1)) +
labs(x = "Healthy adult datasets", y="Number of shared DEGs with RRA", fill="Sex") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.spacing.x=unit(0, "lines"),
plot.title = element_text(size=12, face="bold", colour = "black"),
axis.line = element_line(colour = "black"),
axis.title.y = element_text(size=12, face="bold", colour = "black"),
axis.text.y = element_text(size=8, colour = "black", vjust = 0.7, hjust=0.5),
axis.title.x = element_text(size=12, face="bold", colour = "black"),
axis.text.x = element_text(size=8, colour = "black", vjust = 0.7, hjust=0.5),
legend.position = "bottom",
legend.title = element_text(size=12, face="bold", colour = "black"))
ggplot(rra_common, aes(proj, num_genes_rra, fill=sex)) +
geom_bar(stat = "identity", position = "dodge", color="black") +
facet_wrap( ~ ct, scales = "free") +
scale_y_continuous(breaks=seq(min(num_genes_rra), max(num_genes_rra), by=1)) +
labs(x = "Healthy adult datasets", y="Number of shared DEGs with RRA", fill="Sex") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.spacing.x=unit(0, "lines"),
plot.title = element_text(size=12, face="bold", colour = "black"),
axis.line = element_line(colour = "black"),
axis.title.y = element_text(size=12, face="bold", colour = "black"),
axis.text.y = element_text(size=8, colour = "black", vjust = 0.7, hjust=0.5),
axis.title.x = element_text(size=12, face="bold", colour = "black"),
axis.text.x = element_text(size=8, colour = "black", vjust = 0.7, hjust=0.5),
legend.position = "bottom",
legend.title = element_text(size=12, face="bold", colour = "black"))
ggplot(rra_common, aes(proj, num_genes_rra, fill=sex)) +
geom_bar(stat = "identity", position = "dodge", color="black") +
facet_wrap( ~ ct, scales = "free") +
scale_y_continuous(breaks=seq(min(num_genes_rra), max(num_genes_rra), by=1)) +
labs(x = "Healthy adult datasets", y="Number of shared DEGs with RRA", fill="Sex") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.spacing.x=unit(0, "lines"),
plot.title = element_text(size=12, face="bold", colour = "black"),
axis.line = element_line(colour = "black"),
axis.title.y = element_text(size=12, face="bold", colour = "black"),
axis.text.y = element_text(size=8, colour = "black"),
axis.title.x = element_text(size=12, face="bold", colour = "black"),
axis.text.x = element_text(size=8, colour = "black", angle = 90),
legend.position = "bottom",
legend.title = element_text(size=12, face="bold", colour = "black"))
rra_out <- paste0(main_comparison, "Pattama_RRA/")
dir.create(rra_out, showWarnings = F, recursive = T)
pdf(paste0(rra_out, "num_of_shared_genes_per_ct.pdf"))
print(ggplot(rra_common, aes(proj, num_genes_rra, fill=sex)) +
geom_bar(stat = "identity", position = "dodge", color="black") +
facet_wrap( ~ ct, scales = "free") +
scale_y_continuous(breaks=seq(min(num_genes_rra), max(num_genes_rra), by=1)) +
labs(x = "Healthy adult datasets", y="Number of shared DEGs with RRA", fill="Sex") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.spacing.x=unit(0, "lines"),
plot.title = element_text(size=12, face="bold", colour = "black"),
axis.line = element_line(colour = "black"),
axis.title.y = element_text(size=12, face="bold", colour = "black"),
axis.text.y = element_text(size=8, colour = "black"),
axis.title.x = element_text(size=12, face="bold", colour = "black"),
axis.text.x = element_text(size=8, colour = "black", angle = 90),
legend.position = "bottom",
legend.title = element_text(size=12, face="bold", colour = "black"))
)
dev.off()
nrow(rra$F$FC)
nrow(rra$M$FC)
num_genes_rra <- vector()
comp_names <- vector()
genes_rra <- vector()
for (sex in c("F", "M")) {
for (proj in unique(healthy[[sex]]$proj_id)) {
for (ct in unique(healthy[[sex]][which(healthy[[sex]]$proj_id==proj), "common_annot"])) {
comp_names <- c(comp_names, paste(sex, proj, ct, sep = "/"))
num_genes_rra <- c(num_genes_rra, length(intersect(healthy[[sex]][which(healthy[[sex]]$proj_id==proj & healthy[[sex]]$common_annot==ct), "Gene"],
rra[[sex]][[region_of_interest]][, "Gene"])))
genes_rra <- c(genes_rra, intersect(healthy[[sex]][which(healthy[[sex]]$proj_id==proj & healthy[[sex]]$common_annot==ct), "Gene"],
rra[[sex]][[region_of_interest]][, "Gene"]))
}
}
}
rra_common <- data.frame(comp_names, num_genes_rra)
rra_common <- separate(rra_common, comp_names, into = c("sex", "proj", "ct"), sep = "/")
count_rra <- data.frame(comp_names, genes_rra)
num_genes_rra <- vector()
comp_names <- vector()
genes_rra <- vector
comp_names_rep <- vector()
for (sex in c("F", "M")) {
for (proj in unique(healthy[[sex]]$proj_id)) {
for (ct in unique(healthy[[sex]][which(healthy[[sex]]$proj_id==proj), "common_annot"])) {
comp_names <- c(comp_names, paste(sex, proj, ct, sep = "/"))
num_genes_rra <- c(num_genes_rra, length(intersect(healthy[[sex]][which(healthy[[sex]]$proj_id==proj & healthy[[sex]]$common_annot==ct), "Gene"],
rra[[sex]][[region_of_interest]][, "Gene"])))
comp_names_rep <- c(comp_names_rep, rep(paste(sex, proj, ct, sep = "/"), length(intersect(healthy[[sex]][which(healthy[[sex]]$proj_id==proj & healthy[[sex]]$common_annot==ct), "Gene"],
rra[[sex]][[region_of_interest]][, "Gene"]))))
genes_rra <- c(genes_rra, intersect(healthy[[sex]][which(healthy[[sex]]$proj_id==proj & healthy[[sex]]$common_annot==ct), "Gene"],
rra[[sex]][[region_of_interest]][, "Gene"]))
}
}
}
rra_common <- data.frame(comp_names, num_genes_rra)
rra_common <- separate(rra_common, comp_names, into = c("sex", "proj", "ct"), sep = "/")
count_rra <- data.frame(comp_names_rep, genes_rra)
count_rra <- separate(count_rra, comp_names_rep, into = c("sex", "proj", "ct"), sep = "/")
count_rra <- data.frame(comp_names_rep, genes_rra)
count_rra <- data.frame(comp_names_rep, unlist(genes_rra))
num_genes_rra <- vector()
comp_names <- vector()
genes_rra <- vector()
comp_names_rep <- vector()
for (sex in c("F", "M")) {
for (proj in unique(healthy[[sex]]$proj_id)) {
for (ct in unique(healthy[[sex]][which(healthy[[sex]]$proj_id==proj), "common_annot"])) {
comp_names <- c(comp_names, paste(sex, proj, ct, sep = "/"))
num_genes_rra <- c(num_genes_rra, length(intersect(healthy[[sex]][which(healthy[[sex]]$proj_id==proj & healthy[[sex]]$common_annot==ct), "Gene"],
rra[[sex]][[region_of_interest]][, "Gene"])))
comp_names_rep <- c(comp_names_rep, rep(paste(sex, proj, ct, sep = "/"), length(intersect(healthy[[sex]][which(healthy[[sex]]$proj_id==proj & healthy[[sex]]$common_annot==ct), "Gene"],
rra[[sex]][[region_of_interest]][, "Gene"]))))
genes_rra <- c(genes_rra, intersect(healthy[[sex]][which(healthy[[sex]]$proj_id==proj & healthy[[sex]]$common_annot==ct), "Gene"],
rra[[sex]][[region_of_interest]][, "Gene"]))
}
}
}
rra_common <- data.frame(comp_names, num_genes_rra)
rra_common <- separate(rra_common, comp_names, into = c("sex", "proj", "ct"), sep = "/")
count_rra <- data.frame(comp_names_rep, unlist(genes_rra))
count_rra <- separate(count_rra, comp_names_rep, into = c("sex", "proj", "ct"), sep = "/")
count_rra <- data.frame(comp_names_rep, genes_rra)
count_rra <- separate(count_rra, comp_names_rep, into = c("sex", "proj", "ct"), sep = "/")
View(count_rra)
write.csv(count_rra, paste0(rra_out, "rra_genes_in_healthy.csv"))
ggplot(rra_common, aes(proj, num_genes_rra, fill=sex)) +
geom_bar(stat = "identity", position = "dodge", color="black") +
facet_wrap( ~ ct) +
scale_y_continuous(breaks=seq(min(num_genes_rra), max(num_genes_rra), by=1)) +
labs(x = "Healthy adult datasets", y="Number of shared DEGs with RRA", fill="Sex") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.spacing.x=unit(0, "lines"),
plot.title = element_text(size=12, face="bold", colour = "black"),
axis.line = element_line(colour = "black"),
axis.title.y = element_text(size=12, face="bold", colour = "black"),
axis.text.y = element_text(size=8, colour = "black"),
axis.title.x = element_text(size=12, face="bold", colour = "black"),
axis.text.x = element_text(size=8, colour = "black", angle = 90),
legend.position = "bottom",
legend.title = element_text(size=12, face="bold", colour = "black"))
pdf(paste0(rra_out, "num_of_shared_genes_per_ct.pdf"))
print(ggplot(rra_common, aes(proj, num_genes_rra, fill=sex)) +
geom_bar(stat = "identity", position = "dodge", color="black") +
facet_wrap( ~ ct, scales = "free_x") +
scale_y_continuous(breaks=seq(min(num_genes_rra), max(num_genes_rra), by=1)) +
labs(x = "Healthy adult datasets", y="Number of shared DEGs with RRA", fill="Sex") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.spacing.x=unit(0, "lines"),
plot.title = element_text(size=12, face="bold", colour = "black"),
axis.line = element_line(colour = "black"),
axis.title.y = element_text(size=12, face="bold", colour = "black"),
axis.text.y = element_text(size=8, colour = "black"),
axis.title.x = element_text(size=12, face="bold", colour = "black"),
axis.text.x = element_text(size=8, colour = "black", angle = 90),
legend.position = "bottom",
legend.title = element_text(size=12, face="bold", colour = "black"))
)
dev.off()
