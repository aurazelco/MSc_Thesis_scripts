source("/Users/aurazelco/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_DEGs_func.R")
# sets the directories where to find the DEG csv files
main_DISCO <- "/Users/aurazelco/Desktop/Lund_MSc/Thesis/data/DISCOv1.0/DEGs_proj_adjust_pval/"
main_UCSC <- "/Users/aurazelco/Desktop/Lund_MSc/Thesis/data/UCSC/DEGs_adjust_pval/"
# set the main directory where to save the generated plots - sub-directories are created (if they do not already exist) within the plotting functions
main_comparison <- "/Users/aurazelco/Desktop/Lund_MSc/Thesis/data/Comparison_adjust_pval/"
# Vectors to save the different sub-groups of DISCO and UCSC
sub_disco <- list.dirs(main_DISCO, full.names = F, recursive = F)[-1]
# the first folder "exta_files" is excluded
sub_UCSC <- list.dirs(main_UCSC, full.names = F, recursive = F)[-1]
# Import all the CSVs from the different ages/conditions - slightly different file tree structure requires a different approach for UCSC
disco <- ImportDatasets(main_DISCO, sub_disco, UCSC_flag = "no", individual_projs = T)
names(disco[[1]]) <- str_replace_all(names(disco[[1]]), "Normal", "Healthy")
UCSC <- ImportDatasets(main_UCSC, sub_UCSC, UCSC_flag = "yes", individual_projs = F)
unified_annotation <- c("CXCL14 IN" = "Interneurons",
"EC" = "Endothelial cells",
"fibrous astrocyte"  = "Astrocytes",
"L2_3 EN" = "Excitatory neurons",
"L4 EN" = "Excitatory neurons",
"L5 EN" = "Excitatory neurons",
"L5_6 EN" = "Excitatory neurons",
"L5b EN" = "Excitatory neurons",
"L6 EN" = "Excitatory neurons",
"microglia" = "Microglia",
"Oligodendrocyte" =  "Oligodendrocytes",
"OPC" = "OPCs",
"PLCH1 L4_5 EN" = "Excitatory neurons",
"protoplasmic astrocyte" = "Astrocytes",
"PVALB IN"  = "Interneurons",
"pyramidal neuron"  = "Excitatory neurons",
"SST IN" = "Interneurons",
"SV2C IN"  = "Interneurons",
"TSHZ2 L4_5 EN" = "Excitatory neurons",
"VIP IN" = "Interneurons",
"Astrocytes" = "Astrocytes",
"Excitatory neurons"  = "Excitatory neurons",
"Interneurons"   = "Interneurons",
"Microglia"  = "Microglia",
"Oligodendrocytes" = "Oligodendrocytes",
"OPCs" = "OPCs",
"Unknown" = "Unknown",
"Vascular cells" = "Vascular cells",
"Dorsal progenitors"  = "Dorsal progenitors" ,
"Ventral progenitors" = "Ventral progenitors")
names(unified_annotation) <- tolower(names(unified_annotation))
# defines the order in which to organize the presence heatmaps, so the groups are in developmental order, with the last groups as diseases
groups_order <- c(
"Velmeshev_2022_2nd_trimester",
"Velmeshev_2022_3rd_trimester",
"Velmeshev_2022_0_1_years",
"Velmeshev_2022_1_2_years",
"Velmeshev_2022_2_4_years",
"Velmeshev_2022_10_20_years",
"Velmeshev_2022_Adult",
"Healthy_GSE157827",
"Healthy_GSE174367",
"Healthy_PRJNA544731",
"Alzheimer's disease_GSE157827",
"Alzheimer's disease_GSE174367",
"Multiple Sclerosis_PRJNA544731"
)
# Generates a df with all DEGs
sexes <- CreateSexDf(c(UCSC[[1]], disco[[1]]), unified_annotation)
main_comparison)
main_comparison)
main_comparison
mt_ref <- readxl::read_xlsx(paste0(main_comparison,"Thul_2017_sm_table_s6.xlsx" ))
colnames(mt_ref)
unique(mt_ref$Reliability)
View(mt_ref)
all_genes <- do.call(rbind, sexes)
all_genes$ct <- gsub("\\..*", "", rownames(all_genes))
all_genes$presence <- str_replace_all(all_genes$presence, c("yes"="Yes", "no"="No"))
mt_filt <- mt_ref[which(mt_ref$Gene %in% unique(all_genes$gene_id & all_genes$presence=="Yes")),]
mt_filt <- mt_ref[which(mt_ref$Gene %in% unique(all_genes[which(all_genes$presence=="Yes"), "gene_id"])),]
View(mt_filt)
View(all_genes)
mt_filt <- mt_filt[which(mt_filt$Reliability!="Uncertain"), ]
View(mt_ref)
mt_filt <- mt_ref[which(mt_ref$Gene %in% unique(all_genes[which(all_genes$presence=="Yes"), "gene_id"])),]
rm(all_genes, mt_filt)
all_genes <- do.call(rbind, sexes)
all_genes$ct <- gsub("\\..*", "", rownames(all_genes))
all_genes$presence <- str_replace_all(all_genes$presence, c("yes"="Yes", "no"="No"))
rm(mt_ref)
location_df <- readxl::read_xlsx(paste0(main_comparison,"Thul_2017_sm_table_s6.xlsx" ))
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
source("/Users/aurazelco/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_DEGs_func.R")
# sets the directories where to find the DEG csv files
main_DISCO <- "/Users/aurazelco/Desktop/Lund_MSc/Thesis/data/DISCOv1.0/DEGs_proj_adjust_pval/"
main_UCSC <- "/Users/aurazelco/Desktop/Lund_MSc/Thesis/data/UCSC/DEGs_adjust_pval/"
# set the main directory where to save the generated plots - sub-directories are created (if they do not already exist) within the plotting functions
main_comparison <- "/Users/aurazelco/Desktop/Lund_MSc/Thesis/data/Comparison_adjust_pval/"
# Vectors to save the different sub-groups of DISCO and UCSC
sub_disco <- list.dirs(main_DISCO, full.names = F, recursive = F)[-1]
# the first folder "exta_files" is excluded
sub_UCSC <- list.dirs(main_UCSC, full.names = F, recursive = F)[-1]
# Import all the CSVs from the different ages/conditions - slightly different file tree structure requires a different approach for UCSC
disco <- ImportDatasets(main_DISCO, sub_disco, UCSC_flag = "no", individual_projs = T)
names(disco[[1]]) <- str_replace_all(names(disco[[1]]), "Normal", "Healthy")
UCSC <- ImportDatasets(main_UCSC, sub_UCSC, UCSC_flag = "yes", individual_projs = F)
unified_annotation <- c("CXCL14 IN" = "Interneurons",
"EC" = "Endothelial cells",
"fibrous astrocyte"  = "Astrocytes",
"L2_3 EN" = "Excitatory neurons",
"L4 EN" = "Excitatory neurons",
"L5 EN" = "Excitatory neurons",
"L5_6 EN" = "Excitatory neurons",
"L5b EN" = "Excitatory neurons",
"L6 EN" = "Excitatory neurons",
"microglia" = "Microglia",
"Oligodendrocyte" =  "Oligodendrocytes",
"OPC" = "OPCs",
"PLCH1 L4_5 EN" = "Excitatory neurons",
"protoplasmic astrocyte" = "Astrocytes",
"PVALB IN"  = "Interneurons",
"pyramidal neuron"  = "Excitatory neurons",
"SST IN" = "Interneurons",
"SV2C IN"  = "Interneurons",
"TSHZ2 L4_5 EN" = "Excitatory neurons",
"VIP IN" = "Interneurons",
"Astrocytes" = "Astrocytes",
"Excitatory neurons"  = "Excitatory neurons",
"Interneurons"   = "Interneurons",
"Microglia"  = "Microglia",
"Oligodendrocytes" = "Oligodendrocytes",
"OPCs" = "OPCs",
"Unknown" = "Unknown",
"Vascular cells" = "Vascular cells",
"Dorsal progenitors"  = "Dorsal progenitors" ,
"Ventral progenitors" = "Ventral progenitors")
names(unified_annotation) <- tolower(names(unified_annotation))
# defines the order in which to organize the presence heatmaps, so the groups are in developmental order, with the last groups as diseases
groups_order <- c(
"Velmeshev_2022_2nd_trimester",
"Velmeshev_2022_3rd_trimester",
"Velmeshev_2022_0_1_years",
"Velmeshev_2022_1_2_years",
"Velmeshev_2022_2_4_years",
"Velmeshev_2022_10_20_years",
"Velmeshev_2022_Adult",
"Healthy_GSE157827",
"Healthy_GSE174367",
"Healthy_PRJNA544731",
"Alzheimer's disease_GSE157827",
"Alzheimer's disease_GSE174367",
"Multiple Sclerosis_PRJNA544731"
)
# Generates a df with all DEGs
sexes <- CreateSexDf(c(UCSC[[1]], disco[[1]]), unified_annotation)
location_df <- readxl::read_xlsx(paste0(main_comparison,"Thul_2017_sm_table_s6.xlsx" ))
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
sexes <- CreateSexDf(c(UCSC[[1]], disco[[1]]), unified_annotation)
source("/Users/aurazelco/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
main_DISCO <- "/Users/aurazelco/Desktop/Lund_MSc/Thesis/data/DISCOv1.0/DEGs_proj_adjust_pval/"
main_UCSC <- "/Users/aurazelco/Desktop/Lund_MSc/Thesis/data/UCSC/DEGs_adjust_pval/"
# set the main directory where to save the generated plots - sub-directories are created (if they do not already exist) within the plotting functions
main_comparison <- "/Users/aurazelco/Desktop/Lund_MSc/Thesis/data/Comparison_adjust_pval/"
sub_disco <- list.dirs(main_DISCO, full.names = F, recursive = F)[-1]
# the first folder "exta_files" is excluded
sub_UCSC <- list.dirs(main_UCSC, full.names = F, recursive = F)[-1]
# Import all the CSVs from the different ages/conditions - slightly different file tree structure requires a different approach for UCSC
disco <- ImportDatasets(main_DISCO, sub_disco, UCSC_flag = "no", individual_projs = T)
names(disco[[1]]) <- str_replace_all(names(disco[[1]]), "Normal", "Healthy")
UCSC <- ImportDatasets(main_UCSC, sub_UCSC, UCSC_flag = "yes", individual_projs = F)
unified_annotation <- c("CXCL14 IN" = "Interneurons",
"EC" = "Endothelial cells",
"fibrous astrocyte"  = "Astrocytes",
"L2_3 EN" = "Excitatory neurons",
"L4 EN" = "Excitatory neurons",
"L5 EN" = "Excitatory neurons",
"L5_6 EN" = "Excitatory neurons",
"L5b EN" = "Excitatory neurons",
"L6 EN" = "Excitatory neurons",
"microglia" = "Microglia",
"Oligodendrocyte" =  "Oligodendrocytes",
"OPC" = "OPCs",
"PLCH1 L4_5 EN" = "Excitatory neurons",
"protoplasmic astrocyte" = "Astrocytes",
"PVALB IN"  = "Interneurons",
"pyramidal neuron"  = "Excitatory neurons",
"SST IN" = "Interneurons",
"SV2C IN"  = "Interneurons",
"TSHZ2 L4_5 EN" = "Excitatory neurons",
"VIP IN" = "Interneurons",
"Astrocytes" = "Astrocytes",
"Excitatory neurons"  = "Excitatory neurons",
"Interneurons"   = "Interneurons",
"Microglia"  = "Microglia",
"Oligodendrocytes" = "Oligodendrocytes",
"OPCs" = "OPCs",
"Unknown" = "Unknown",
"Vascular cells" = "Vascular cells",
"Dorsal progenitors"  = "Dorsal progenitors" ,
"Ventral progenitors" = "Ventral progenitors")
names(unified_annotation) <- tolower(names(unified_annotation))
# defines the order in which to organize the presence heatmaps, so the groups are in developmental order, with the last groups as diseases
groups_order <- c(
"Velmeshev_2022_2nd_trimester",
"Velmeshev_2022_3rd_trimester",
"Velmeshev_2022_0_1_years",
"Velmeshev_2022_1_2_years",
"Velmeshev_2022_2_4_years",
"Velmeshev_2022_10_20_years",
"Velmeshev_2022_Adult",
"Healthy_GSE157827",
"Healthy_GSE174367",
"Healthy_PRJNA544731",
"Alzheimer's disease_GSE157827",
"Alzheimer's disease_GSE174367",
"Multiple Sclerosis_PRJNA544731"
)
# Generates a df with all DEGs
sexes <- CreateSexDf(c(UCSC[[1]], disco[[1]]), unified_annotation)
location_df <- readxl::read_xlsx(paste0(main_comparison,"Thul_2017_sm_table_s6.xlsx" ))
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
View(location_df)
colnames(location_df)
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
colnames(location_df)[4:32]
colSums(location_df[,4:42])
colSums(location_df[,4:32])
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
sum(colSums(location_df[,4:32]))
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
genes_loc <- ExtractLocation(sexes, location_df)
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
genes_loc <- ExtractLocation(sexes, location_df)
View(genes_loc)
genes_loc <- do.call(rbind, genes_loc)
View(genes_loc)
genes_loc$ids <- gsub("\\..*", "", rownames(genes_loc))
View(genes_loc)
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
genes_loc <- ExtractLocation(sexes, location_df)
View(genes_loc)
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
genes_loc <- ExtractLocation(sexes, location_df)
View(genes_loc)
str(genes_loc)
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
str(genes_loc)
genes_loc <- ExtractLocation(sexes, location_df)
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
genes_loc <- ExtractLocation(sexes, location_df)
View(genes_loc)
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
genes_loc <- ExtractLocation(sexes, location_df)
View(genes_loc)
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
genes_loc <- ExtractLocation(sexes, location_df)
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
genes_loc <- ExtractLocation(sexes, location_df)
View(genes_loc)
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
genes_loc <- ExtractLocation(sexes, location_df)
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
genes_loc <- ExtractLocation(sexes, location_df)
View(genes_loc)
ggplot(genes_loc, aes(factor(groups, groups_order[which(groups_order %in% groups)]), loc_count, fill=locations)) +
geom_bar(stat="identity", color="black") +
facet_grid(ct ~ sex, scales = "free")
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
genes_loc <- ExtractLocation(sexes, location_df)
ggplot(genes_loc, aes(factor(groups, groups_order[which(groups_order %in% groups)]), loc_count, fill=locations)) +
geom_bar(stat="identity", color="black") +
facet_grid(ct ~ sex, scales = "free")
ggplot(genes_loc, aes(factor(groups, groups_order[which(groups_order %in% groups)]), locations, size=loc_count)) +
geom_point() +
facet_grid(ct ~ sex, scales = "free")
ggplot(genes_loc, aes( locations, factor(groups, groups_order[which(groups_order %in% groups)]),size=loc_count)) +
geom_point() +
facet_grid(ct ~ sex, scales = "free")
ggplot(genes_loc, aes( locations, factor(groups, groups_order[which(groups_order %in% groups)]), size=loc_count, color=locations)) +
geom_point() +
facet_grid(ct ~ sex, scales = "free")
ggplot(genes_loc, aes( locations, sex, size=loc_count, color=locations)) +
geom_point() +
facet_grid(ct ~ factor(groups, groups_order[which(groups_order %in% groups)]), scales = "free")
ggplot(genes_loc, aes(factor(groups, groups_order[which(groups_order %in% groups)]), loc_count, fill=locations)) +
geom_bar(stat="identity", color="black") +
coord_polar("y") +
facet_grid(ct ~ sex, scales = "free")
ggplot(genes_loc, aes(factor(groups, groups_order[which(groups_order %in% groups)]), loc_count, fill=locations)) +
geom_bar(stat="identity", color="black") +
coord_polar("y") +
facet_grid(ct ~ sex)
ggplot(genes_loc, aes(factor(groups, groups_order[which(groups_order %in% groups)]), loc_count, fill=locations)) +
geom_bar(stat="identity", color="black", position = "fill") +
coord_polar("y") +
facet_grid(ct ~ sex)
ggplot(genes_loc[which(genes_loc$ct=="Astrocyyes"),], aes(factor(groups, groups_order[which(groups_order %in% groups)]), loc_count, fill=locations)) +
geom_bar(stat="identity", color="black", position = "fill") +
coord_polar("y") +
facet_grid(ct ~ sex)
ggplot(genes_loc[which(genes_loc$ct=="Astrocyyes"),], aes(factor(groups, groups_order[which(groups_order %in% groups)]), loc_count, fill=locations)) +
geom_bar(stat="identity", color="black", position = "fill") +
coord_polar("y") +
facet_wrap(~sex)
ggplot(genes_loc[which(genes_loc$ct=="Astrocytes"),], aes(factor(groups, groups_order[which(groups_order %in% groups)]), loc_count, fill=locations)) +
geom_bar(stat="identity", color="black", position = "fill") +
coord_polar("y") +
facet_wrap(~sex)
ggplot(genes_loc[which(genes_loc$ct=="Astrocytes"),], aes(factor(groups, groups_order[which(groups_order %in% groups)]), loc_count, fill=locations)) +
geom_bar(stat="identity", color="black", position = "fill") +
coord_polar("y") +
facet_grid(ct ~ sex)
ggplot(genes_loc[which(genes_loc$ct=="Astrocytes"),], aes(factor(groups, groups_order[which(groups_order %in% groups)]), loc_count, fill=locations)) +
geom_bar(stat="identity", color="black", position = "fill") +
coord_polar("y") +
facet_grid(ct ~ sex ~ factor(groups, groups_order[which(groups_order %in% groups)]))
ggplot(genes_loc[which(genes_loc$ct=="Astrocytes"),], aes(factor(groups, groups_order[which(groups_order %in% groups)]), locations, fill=locations)) +
geom_bar(stat="identity", color="black", position = "fill") +
coord_polar("y") +
facet_grid(ct ~ sex ~ factor(groups, groups_order[which(groups_order %in% groups)]))
ggplot(genes_loc[which(genes_loc$ct=="Astrocytes"),], aes(factor(groups, groups_order[which(groups_order %in% groups)]), locations, size=loc_count, fill=factor(groups, groups_order[which(groups_order %in% groups)]))) +
geom_point()
ggplot(genes_loc[which(genes_loc$ct=="Astrocytes" & genes_loc$loc_count>0),], aes(factor(groups, groups_order[which(groups_order %in% groups)]), locations, size=loc_count, fill=factor(groups, groups_order[which(groups_order %in% groups)]))) +
geom_point()
source("~/Desktop/Lund_MSc/Thesis/scripts/Comparison_adjust_pval/DEGs/Compare_MT_genes_func.R")
genes_loc <- ExtractLocation(sexes, location_df)
genes_loc <- ExtractLocation(sexes, location_df, groups_order)
ggplot(genes_loc[which(genes_loc$ct=="Astrocytes" & genes_loc$loc_count>0),], aes(groups, locations, size=loc_count, fill=factor(groups, groups_order[which(groups_order %in% groups)]))) +
geom_point()
ggplot(genes_loc[which(genes_loc$ct=="Astrocytes" & genes_loc$loc_count>0),], aes(groups, locations, size=loc_count, fill=factor(groups, groups_order[which(groups_order %in% groups)]))) +
geom_bar(stat="identity") +
coord_polar("y")
ggplot(genes_loc[which(genes_loc$ct=="Astrocytes" & genes_loc$loc_count>0),], aes(groups, loc_count)) +
geom_bar(stat="identity") +
coord_polar("y")
ggplot(genes_loc[which(genes_loc$ct=="Astrocytes" & genes_loc$loc_count>0),], aes(groups, loc_count, fill=locations)) +
geom_bar(stat="identity", position = "fill") +
coord_polar("y")
ggplot(genes_loc[which(genes_loc$ct=="Astrocytes" & genes_loc$loc_count>0),], aes(x="", loc_count, fill=locations)) +
geom_bar(stat="identity", position = "fill") +
coord_polar("y")
ggplot(genes_loc[which(genes_loc$ct=="Astrocytes" & genes_loc$loc_count>0),], aes(x="", loc_count, fill=locations)) +
geom_bar(stat="identity", position = "fill") +
coord_polar("y") +
facet_grid(groups ~ sex)
ggplot(genes_loc[which(genes_loc$ct=="Astrocytes" & genes_loc$loc_count>0),], aes(x="", loc_count, fill=locations)) +
geom_bar(stat="identity", position = "fill") +
coord_polar("y") +
facet_grid(groups ~ sex ~ ct)
ggplot(genes_loc[which(genes_loc$ct=="Astrocytes" & genes_loc$loc_count>0),], aes(x="", loc_count, fill=locations)) +
geom_bar(stat="identity", position = "fill") +
coord_polar("y") +
facet_grid( sex ~ ct ~ groups)
ggplot(genes_loc[which(genes_loc$ct=="Astrocytes" & genes_loc$loc_count>0),], aes(x="", loc_count, fill=locations)) +
geom_bar(stat="identity", position = "fill") +
coord_polar("y", start = 0) +
facet_grid( sex ~ ct ~ groups)
ggplot(genes_loc[which(genes_loc$loc_count>0),], aes(x="", loc_count, fill=locations)) +
geom_bar(stat="identity", position = "fill") +
coord_polar("y", start = 0) +
facet_grid( sex ~ ct ~ groups)
ggplot(genes_loc[which(genes_loc$loc_count>0),], aes(loc_count, fill=locations)) +
geom_bar(stat="identity", position = "fill") +
coord_polar("y", start = 0) +
facet_grid( sex ~ ct ~ groups)
ggplot(genes_loc[which(genes_loc$loc_count>0),], aes(x="", loc_count, fill=locations)) +
geom_bar(stat="identity", position = "fill") +
coord_polar("y", start = 0) +
facet_grid( sex ~ ct ~ groups)
ggplot(genes_loc[which(genes_loc$loc_count>0),], aes(groups, loc_count, fill=locations)) +
geom_bar(stat="identity", position = "fill") +
facet_grid( sex ~ ct, scales = "free")
ggplot(genes_loc[which(genes_loc$loc_count>0),], aes(groups, loc_count, fill=locations)) +
geom_bar(stat="identity", position = "fill") +
facet_grid(ct ~ sex, scales = "free")
ggplot(genes_loc[which(genes_loc$loc_count>0),], aes(groups, loc_count, fill=locations)) +
geom_bar(stat="identity", position = "fill", color="black") +
facet_grid(ct ~ sex, scales = "free")
ggplot(genes_loc[which(genes_loc$loc_count>0),], aes(groups, size=loc_count, fill=locations)) +
geom_point() +
facet_grid(ct ~ sex, scales = "free")
ggplot(genes_loc[which(genes_loc$loc_count>0),], aes(groups, ct, size=loc_count, fill=locations)) +
geom_point() +
facet_grid(~ sex, scales = "free")
ggplot(genes_loc[which(genes_loc$loc_count>0),], aes(groups, locations, size=loc_count, fill=locations)) +
geom_point() +
facet_grid(ct ~ sex, scales = "free")
ggplot(genes_loc[which(genes_loc$loc_count>0),], aes(locations, groups, size=loc_count, fill=locations)) +
geom_point() +
facet_grid(ct ~ sex, scales = "free")
ggplot(genes_loc[which(genes_loc$loc_count>0),], aes(locations, groups)) +
geom_point() +
facet_grid(ct ~ sex, scales = "free")
ggplot(genes_loc[which(genes_loc$loc_count>0),], aes(locations, groups, size=loc_count)) +
geom_point() +
facet_grid(ct ~ sex, scales = "free")
ggplot(genes_loc[which(genes_loc$loc_count>0),], aes(locations, groups, size=loc_count, fill=sex)) +
geom_point() +
facet_grid(ct ~ sex, scales = "free")
ggplot(genes_loc, aes(locations, groups, size=loc_count, fill=sex)) +
geom_point() +
facet_grid(ct ~ sex, scales = "free")
