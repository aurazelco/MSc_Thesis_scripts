library(Seurat)
library(SeuratData)
library(patchwork)
library(metap)
library(stringr)
library(ggplot2)
library(ggpubr)
library(tidyr)
library(dplyr)
library(scales)
library(readxl)
library(matrixStats)
main <- "/Users/aurazelco/Desktop/Lund_MSc/Thesis/data/UCSC/outputs/"
trim_2nd <- readRDS("/Users/aurazelco/Desktop/Lund_MSc/Thesis/data/UCSC/Seurat_UCSC/Eze_Nowakowski_integrated_2nd_trimester.rds")
trim_2nd@meta.data$sex_ct <- paste(trim_2nd@meta.data$sex, trim_2nd@meta.data$cluster_final)
num_sex_ct <- as.data.frame(table(trim_2nd$sex_ct))
num_sex_ct <- separate(num_sex_ct, Var1, into = c("sex" , "ct"), sep = "_")
View(num_sex_ct)
num_sex_ct <- as.data.frame(table(trim_2nd$sex_ct))
View(num_sex_ct)
trim_2nd@meta.data$sex_ct <- paste(trim_2nd@meta.data$sex, trim_2nd@meta.data$cluster_final, sep="_")
num_sex_ct <- as.data.frame(table(trim_2nd$sex_ct))
num_sex_ct <- separate(num_sex_ct, Var1, into = c("sex" , "ct"), sep = "_")
col_factors <- c("sex","ct")
num_sex_ct[col_factors] <- lapply(num_sex_ct[col_factors], as.factor)
names(num_sex_ct)[names(num_sex_ct) == 'Freq'] <- "count"
FiltDF <- function(df, disease, min_num_cells) {
`%!in%` <- Negate(`%in%`)
df <- droplevels(df)
incomplete_ct <- vector()
for (type in levels(df$ct)) {
if ((nrow(subset(df, subset = ct==type))%%2!=0) | (any(subset(df, subset = ct==type)[,"count"] < min_num_cells))) {
incomplete_ct <- c(incomplete_ct, type)
}
}
df_filt <- df[df$ct %!in% incomplete_proj,]
return(df_filt)
}
FiltDF <- function(df, min_num_cells) {
`%!in%` <- Negate(`%in%`)
df <- droplevels(df)
incomplete_ct <- vector()
for (type in levels(df$ct)) {
if ((nrow(subset(df, subset = ct==type))%%2!=0) | (any(subset(df, subset = ct==type)[,"count"] < min_num_cells))) {
incomplete_ct <- c(incomplete_ct, type)
}
}
df_filt <- df[df$ct %!in% incomplete_proj,]
return(df_filt)
}
num_sex_ct <- as.data.frame(table(trim_2nd$sex_ct))
num_sex_ct <- separate(num_sex_ct, Var1, into = c("sex" , "ct"), sep = "_", remove = F)
View(num_sex_ct)
num_sex_ct <- as.data.frame(table(trim_2nd$sex_ct))
num_sex_ct <- separate(num_sex_ct, Var1, into = c("sex" , "ct"), sep = "_", remove = F)
names(num_sex_ct)[names(num_sex_ct) == 'Var1'] <- "idents"
names(num_sex_ct)[names(num_sex_ct) == 'Freq'] <- "count"
col_factors <- c("idents", "sex","ct")
num_sex_ct[col_factors] <- lapply(num_sex_ct[col_factors], as.factor)
main <- "/Users/aurazelco/Desktop/Lund_MSc/Thesis/data/UCSC/DEGs/"
trim_2nd@project.name
trim_2nd@project.name <- "Eze_Nowakowski_integrated_2nd_trimester"
paste0(main, trim_2nd@project.name)
paste0(main, trim_2nd@project.name, "outputs")
paste0(main, trim_2nd@project.name, "/outputs")
dir.create(paste0(main, trim_2nd@project.name, "/outputs"), recursive = T, showWarnings = F)
trim_2nd_output <- paste0(main, trim_2nd@project.name, "/outputs")
dir.create(trim_2nd_output, recursive = T, showWarnings = F)
View(num_sex_ct)
for (min_cells in min_num_cells) {
num_filt <- FiltDF(num_sex_ct, min_cells)
write.csv(num_filt, file = paste0(trim_2nd_output, "/final_filt_", min_cells, ".csv"),
row.names = F)
pdf(paste0(trim_2nd_output, "filt_counts_", min_cells, ".pdf"), 10, 15)
print(ggplot(num_sex_ct, aes(ct, count, fill=sex)) +
geom_bar(stat="identity", position = "dodge") +
labs(x="", y="Nuclei count", fill="Sex") +
geom_hline(yintercept = min_cells, linetype="dashed") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
axis.title.x = element_text(size=12, face="bold", colour = "black"),
axis.text.x = element_text(size=8, colour = "black",angle = 45, vjust = 0.5, hjust=0.5),
axis.ticks.x=element_blank(),
axis.title.y = element_text(size=12, face="bold", colour = "black"),
legend.position = "bottom"))
dev.off()
}
min_num_cells <- c(10,50,100)
for (min_cells in min_num_cells) {
num_filt <- FiltDF(num_sex_ct, min_cells)
write.csv(num_filt, file = paste0(trim_2nd_output, "/final_filt_", min_cells, ".csv"),
row.names = F)
pdf(paste0(trim_2nd_output, "filt_counts_", min_cells, ".pdf"), 10, 15)
print(ggplot(num_sex_ct, aes(ct, count, fill=sex)) +
geom_bar(stat="identity", position = "dodge") +
labs(x="", y="Nuclei count", fill="Sex") +
geom_hline(yintercept = min_cells, linetype="dashed") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
axis.title.x = element_text(size=12, face="bold", colour = "black"),
axis.text.x = element_text(size=8, colour = "black",angle = 45, vjust = 0.5, hjust=0.5),
axis.ticks.x=element_blank(),
axis.title.y = element_text(size=12, face="bold", colour = "black"),
legend.position = "bottom"))
dev.off()
}
FiltDF <- function(df, min_num_cells) {
`%!in%` <- Negate(`%in%`)
df <- droplevels(df)
incomplete_ct <- vector()
for (type in levels(df$ct)) {
if ((nrow(subset(df, subset = ct==type))%%2!=0) | (any(subset(df, subset = ct==type)[,"count"] < min_num_cells))) {
incomplete_ct <- c(incomplete_ct, type)
}
}
df_filt <- df[df$ct %!in% incomplete_ct,]
return(df_filt)
}
for (min_cells in min_num_cells) {
num_filt <- FiltDF(num_sex_ct, min_cells)
write.csv(num_filt, file = paste0(trim_2nd_output, "/final_filt_", min_cells, ".csv"),
row.names = F)
pdf(paste0(trim_2nd_output, "filt_counts_", min_cells, ".pdf"), 10, 15)
print(ggplot(num_sex_ct, aes(ct, count, fill=sex)) +
geom_bar(stat="identity", position = "dodge") +
labs(x="", y="Nuclei count", fill="Sex") +
geom_hline(yintercept = min_cells, linetype="dashed") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
axis.title.x = element_text(size=12, face="bold", colour = "black"),
axis.text.x = element_text(size=8, colour = "black",angle = 45, vjust = 0.5, hjust=0.5),
axis.ticks.x=element_blank(),
axis.title.y = element_text(size=12, face="bold", colour = "black"),
legend.position = "bottom"))
dev.off()
}
for (min_cells in min_num_cells) {
num_filt <- FiltDF(num_sex_ct, min_cells)
write.csv(num_filt, file = paste0(trim_2nd_output, "/final_filt_", min_cells, ".csv"),
row.names = F)
pdf(paste0(trim_2nd_output, "/filt_counts_", min_cells, ".pdf"), 10, 15)
print(ggplot(num_sex_ct, aes(ct, count, fill=sex)) +
geom_bar(stat="identity", position = "dodge") +
labs(x="", y="Nuclei count", fill="Sex") +
geom_hline(yintercept = min_cells, linetype="dashed") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
axis.title.x = element_text(size=12, face="bold", colour = "black"),
axis.text.x = element_text(size=8, colour = "black",angle = 45, vjust = 0.5, hjust=0.5),
axis.ticks.x=element_blank(),
axis.title.y = element_text(size=12, face="bold", colour = "black"),
legend.position = "bottom"))
dev.off()
}
saveRDS(trim_2nd, "/Users/aurazelco/Desktop/Lund_MSc/Thesis/data/UCSC/Seurat_UCSC/Eze_Nowakowski_integrated_2nd_trimester.rds")
